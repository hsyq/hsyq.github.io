(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{350:function(s,t,a){"use strict";a.r(t);var e=a(13),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"redis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[s._v("#")]),s._v(" Redis")]),s._v(" "),t("h2",{attrs:{id:"简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),t("h3",{attrs:{id:"特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[s._v("#")]),s._v(" 特点")]),s._v(" "),t("h3",{attrs:{id:"应用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[s._v("#")]),s._v(" 应用场景")]),s._v(" "),t("ol",[t("li"),s._v(" "),t("li"),s._v(" "),t("li")]),s._v(" "),t("h2",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),t("h3",{attrs:{id:"linux"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[s._v("#")]),s._v(" Linux")]),s._v(" "),t("p",[s._v("以centos为例，下载源码，解压后编译即可使用。")]),s._v(" "),t("p",[s._v("一、安装gcc依赖")]),s._v(" "),t("p",[s._v("由于 redis 是用 C 语言开发，安装之前必先确认是否安装 gcc 环境（gcc -v），如果没有安装，执行以下命令进行安装")]),s._v(" "),t("p",[s._v("yum install -y gcc")]),s._v(" "),t("p",[s._v("二、下载并解压安装包")]),s._v(" "),t("p",[s._v("wget http://download.redis.io/releases/redis-7.0.0.tar.gz")]),s._v(" "),t("p",[s._v("tar -zxvf redis-7.0.0.tar.gz")]),s._v(" "),t("p",[s._v("三、cd切换到redis解压目录下，执行编译")]),s._v(" "),t("p",[s._v("cd redis")]),s._v(" "),t("p",[s._v("make")]),s._v(" "),t("p",[s._v("四、安装并指定安装目录")]),s._v(" "),t("p",[s._v("make install PREFIX=/usr/local/redis")]),s._v(" "),t("p",[s._v("此时/usr/local/redis下生成了一个bin目录")]),s._v(" "),t("p",[s._v("可执行的命令，都在bin目录下。")]),s._v(" "),t("p",[s._v("五、启动服务")]),s._v(" "),t("p",[s._v("5.1前台启动")]),s._v(" "),t("p",[s._v("cd /usr/local/redis/bin/")]),s._v(" "),t("p",[s._v("./redis-server")]),s._v(" "),t("p",[s._v("5.2后台启动")]),s._v(" "),t("p",[s._v("从 redis 的源码目录中复制 redis.conf 到 redis 的安装目录")]),s._v(" "),t("p",[s._v("[root@localhost bin]# cp /usr/local/redis/redis.conf /usr/local/redis/bin/")]),s._v(" "),t("p",[s._v("修改 redis.conf 文件，把 daemonize no 改为 daemonize yes")]),s._v(" "),t("p",[s._v("[root@localhost bin]# vi redis.conf")]),s._v(" "),t("p",[s._v("后台启动")]),s._v(" "),t("p",[s._v("[root@localhost bin]# ./redis-server redis.conf")]),s._v(" "),t("p",[s._v("六、设置开机启动")]),s._v(" "),t("p",[s._v("添加开机启动服务")]),s._v(" "),t("p",[s._v("[root@localhost bin]# vi /etc/systemd/system/redis.service")]),s._v(" "),t("p",[s._v("复制粘贴以下内容：")]),s._v(" "),t("p",[s._v("复制代码\n[Unit]\nDescription=redis-server\nAfter=network.target")]),s._v(" "),t("p",[s._v("[Service]\nType=forking\nExecStart=/usr/local/redis/bin/redis-server /usr/local/redis/bin/redis.conf\nPrivateTmp=true")]),s._v(" "),t("p",[s._v("[Install]\nWantedBy=multi-user.target")]),s._v(" "),t("p",[s._v("注意：ExecStart配置成自己的路径")]),s._v(" "),t("p",[s._v("设置开机启动")]),s._v(" "),t("p",[s._v("[root@localhost bin]# systemctl daemon-reload")]),s._v(" "),t("p",[s._v("[root@localhost bin]# systemctl start redis.service")]),s._v(" "),t("p",[s._v("[root@localhost bin]# systemctl enable redis.service")]),s._v(" "),t("p",[s._v("创建 redis 命令软链接")]),s._v(" "),t("p",[s._v("[root@localhost ~]# ln -s /usr/local/redis/bin/redis-cli /usr/bin/redis")]),s._v(" "),t("p",[s._v("测试 redis")]),s._v(" "),t("p",[s._v("服务操作命令")]),s._v(" "),t("p",[s._v("systemctl start redis.service   #启动redis服务")]),s._v(" "),t("p",[s._v("systemctl stop redis.service   #停止redis服务")]),s._v(" "),t("p",[s._v("systemctl restart redis.service   #重新启动服务")]),s._v(" "),t("p",[s._v("systemctl status redis.service   #查看服务当前状态")]),s._v(" "),t("p",[s._v("systemctl enable redis.service   #设置开机自启动")]),s._v(" "),t("p",[s._v("systemctl disable redis.service   #停止开机自启动")]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("下载源码包\nwget http://download.redis.io/releases/redis-5.0.0.tar.gz")]),s._v(" "),t("p",[s._v("解压安装包\ntar -zxvf redis-5.0.0.tar.gz -C /usr/local")]),s._v(" "),t("p",[s._v("编译安装\ncd /usr/local\nmv redis-5.0.0 redis\ncd redis\nmake &&  make install")]),s._v(" "),t("p",[s._v("注册服务\ncp /usr/local/redis/utils/redis_init_script /etc/rc.d/init.d/redis\nvim /etc/rc.d/init.d/redis  //修改脚本文件\n#chkconfig: 2345 80 90  //第二行加入\nchkconfig --add redis  //注册服务")]),s._v(" "),t("p",[s._v("修改配置文件\nmkdir -p /etc/redis\ncp /usr/local/redis/redis.conf /etc/redis/6379.conf\nvim /etc/redis/6379.conf\n#注释bind 127.0.0.1（用于远程连接），将“daemonize no”修改为“daemonize yes”\n#bind 127.0.0.1\n设置后台运行（守护进程）：daemonize修改为yes\n设置aof持久化：appendonly修改为yes\n设置连接密码：去掉#，requirepass 后面的字符串则为密码")]),s._v(" "),t("p",[s._v("设置开启启动\nsystemctl enable redis\nsystemctl start|stop|restart redis")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" \n")])])]),t("h4",{attrs:{id:"使用yum安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用yum安装"}},[s._v("#")]),s._v(" 使用yum安装")]),s._v(" "),t("p",[s._v("卸载")]),s._v(" "),t("h3",{attrs:{id:"docker-推荐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-推荐"}},[s._v("#")]),s._v(" Docker（推荐）")]),s._v(" "),t("p",[s._v("使用docker安装redis非常方便。")]),s._v(" "),t("p",[s._v("由于我是在阿里云服务器上安装，所以先要在安全组中开启redis的端口：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/hsyq/assets/imgs/2022-05/202205101733763.png",alt:"image-20220510173354724"}})]),s._v(" "),t("p",[s._v("拉取和查看redis镜像：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pull redis\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" images redis\n")])])]),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/hsyq/assets/imgs/2022-05/202205101718378.png",alt:"image-20220510171851343"}})]),s._v(" "),t("p",[s._v("启动一个redis容器：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run --name redis -d -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v(":6379 redis\n")])])]),t("p",[s._v("--name：指定创建的容器的名字")]),s._v(" "),t("p",[s._v("-d：以守护进程的方式运行")]),s._v(" "),t("p",[s._v("-p：指定服务运行的端口")]),s._v(" "),t("p",[s._v("然后进入redis内部，在内容启动redis服务：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9831")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])])]),t("p",[s._v("进入容器后，默认所在的目录即为redis的工作目录，通过redis-cli命令启动：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/hsyq/assets/imgs/2022-05/202205101717406.png",alt:"image-20220510171747361"}})]),s._v(" "),t("p",[s._v("现在来存入几个数据：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" name lee\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v("\n")])])]),t("p",[s._v("读取：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("get name\nget age\n")])])]),t("p",[s._v("docker服务启动时自动启动：")]),s._v(" "),t("p",[s._v("docker run --name redis -p 6379:6379 -d --restart=always redis")]),s._v(" "),t("p",[s._v("数据持久化：")]),s._v(" "),t("p",[s._v("docker run --name redis -d -p 6379:6379 --restart=always redis redis-server --appendonly yes")]),s._v(" "),t("p",[s._v("数据持久化到宿主机：")]),s._v(" "),t("p",[s._v("docker run --name redis -d -p 6379:6379 -v /opt/redis:/data --restart=always redis redis-server --appendonly yes")]),s._v(" "),t("p",[s._v("以配置文件启动")]),s._v(" "),t("p",[s._v("mkdir /opt/redis/data")]),s._v(" "),t("p",[s._v("vim /opt/redis/redis.conf\nappendonly yes")]),s._v(" "),t("h3",{attrs:{id:"windows"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#windows"}},[s._v("#")]),s._v(" Windows")]),s._v(" "),t("p",[s._v("Redis官方没有提供适合windows版本的安装包。")]),s._v(" "),t("p",[s._v("微软团队自己维护了一个windows版本的redis，不过早已停止维护，仓库也已经关闭。")]),s._v(" "),t("p",[s._v("不过Github上还有一个开发者维护的windows版本，目前最新的版本的是5.0。")]),s._v(" "),t("p",[s._v("下载地址：https://github.com/tporadowski/redis/releases")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/hsyq/assets/imgs/2022-05/202205101738140.png",alt:"image-20220510173820082"}})]),s._v(" "),t("p",[s._v("可以下载msi安装包进行安装，或者zip压缩包，下载好直接解压即可使用。")]),s._v(" "),t("p",[s._v("安装好之后，来到安装目录：")]),s._v(" "),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/hsyq/assets/imgs/2022-05/202205221347860.png",alt:"image-20220522134704776"}}),s._v(" "),t("p",[s._v("安装完成后，自动将redis服务设为了自动启动，并开启了持久化，即当你存储了数据，重启计算机后，redis存储的数据仍然是可访问的。")]),s._v(" "),t("p",[s._v("在安装时，将安装目录添加到了环境变量，需要重启才能生效。之后在任意路径下，都可以通过redis-cli命令来访问redis服务：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("PS D:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" redis-cli\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" \n")])])]),t("p",[s._v("设置redis访问密码：")]),s._v(" "),t("p",[s._v("在redis安装目录下，编辑"),t("code",[s._v("redis.windows.conf")]),s._v("：")]),s._v(" "),t("p",[s._v("在redis根目录下找到redis.windows.conf配置文件，搜索requirepass，找到注释密码行，添加密码如下：")]),s._v(" "),t("p",[s._v("requirepass tenny     //注意，行前不能有空格")]),s._v(" "),t("p",[s._v("如果访问受限，可以从我的网盘中下载：")]),s._v(" "),t("p",[s._v("「redis」https://www.aliyundrive.com/s/TJtTbooWaot")]),s._v(" "),t("p",[s._v("提取码: vk80")]),s._v(" "),t("p",[s._v("这里不再具体演示。")]),s._v(" "),t("h2",{attrs:{id:"redis命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis命令"}},[s._v("#")]),s._v(" redis命令")]),s._v(" "),t("p",[s._v("在redis安装还之后，可以看一下安装目录：")]),s._v(" "),t("p",[s._v("可以看到有两个命令工具：")]),s._v(" "),t("p",[s._v("redis-cli：连接redis服务的客户端，可以操作redis数据库\nredis-server：提供数据存取服务的redis服务端程序")]),s._v(" "),t("h2",{attrs:{id:"redis设置用户名和密码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis设置用户名和密码"}},[s._v("#")]),s._v(" redis设置用户名和密码")]),s._v(" "),t("p",[s._v("需要在配置文件中设置。")]),s._v(" "),t("p",[s._v("这里以docker环境为例，在宿主机新建redis的配置文件：")]),s._v(" "),t("p",[s._v("vim /opt/redis/redis.conf")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("#redis可以被外部访问\nbind "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("\n\n#redis持久化\nappendonly yes \n\n#设置密码\nrequirepass kc$7smYo5\n")])])]),t("p",[s._v("启动容器：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run --name redis -d -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v(":6379 --restart"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("always -v /opt/redis/:/data redis redis-server /data/redis.conf\n")])])]),t("p",[s._v("将宿主机中配置文件所在目录映射给容器，并且容器中的redis服务在启动时使用该配置文件启动，从而使配置文件生效。")]),s._v(" "),t("h2",{attrs:{id:"可视化客户端工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可视化客户端工具"}},[s._v("#")]),s._v(" 可视化客户端工具")]),s._v(" "),t("h3",{attrs:{id:"redisinsight"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redisinsight"}},[s._v("#")]),s._v(" RedisInsight")]),s._v(" "),t("p",[s._v("Redis官方出品。好用。")]),s._v(" "),t("p",[s._v("https://redis.com/redis-enterprise/redis-insight/")]),s._v(" "),t("h3",{attrs:{id:"redisdesktopmanager"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redisdesktopmanager"}},[s._v("#")]),s._v(" RedisDesktopManager")]),s._v(" "),t("p",[s._v("非常优秀的一款工具。")]),s._v(" "),t("p",[s._v("只提供开源代码，不提供编译后的安装包。")]),s._v(" "),t("p",[s._v("官网：https://resp.app/")]),s._v(" "),t("p",[s._v("https://github.com/uglide/RedisDesktopManager")]),s._v(" "),t("h3",{attrs:{id:"redisdesktopmanager-windows"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redisdesktopmanager-windows"}},[s._v("#")]),s._v(" RedisDesktopManager-Windows")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/lework",target:"_blank",rel:"noopener noreferrer"}},[s._v("@lework"),t("OutboundLink")],1),s._v(" 提供了上面RDM的编译后的安装包，并且保持了非常及时的更新频率，直接下载压缩包，解压后安装使用！")]),s._v(" "),t("p",[s._v("https://github.com/lework/RedisDesktopManager-Windows/releases")]),s._v(" "),t("p",[s._v("网盘下载：")]),s._v(" "),t("p",[s._v("「redis」https://www.aliyundrive.com/s/TJtTbooWaot")]),s._v(" "),t("p",[s._v("提取码: vk80")]),s._v(" "),t("h3",{attrs:{id:"anotherredisdesktopmanager"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#anotherredisdesktopmanager"}},[s._v("#")]),s._v(" AnotherRedisDesktopManager")]),s._v(" "),t("p",[s._v("开源免费。")]),s._v(" "),t("p",[s._v("Github下载：https://github.com/qishibo/AnotherRedisDesktopManager/releases")]),s._v(" "),t("h3",{attrs:{id:"redis-assistant"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-assistant"}},[s._v("#")]),s._v(" Redis Assistant")]),s._v(" "),t("p",[s._v("中文，收费。")]),s._v(" "),t("p",[s._v("http://www.redisant.cn/")]),s._v(" "),t("h1",{attrs:{id:"redis-数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-数据类型"}},[s._v("#")]),s._v(" Redis 数据类型")]),s._v(" "),t("p",[s._v("Redis支持五种数据类型：string（字符串），hash（哈希），list（列表），set（集合）及zset(sorted set：有序集合)。")]),s._v(" "),t("h2",{attrs:{id:"string-字符串"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#string-字符串"}},[s._v("#")]),s._v(" String（字符串）")]),s._v(" "),t("p",[s._v("string 是 redis 最基本的类型，你可以理解成与 Memcached 一模一样的类型，一个 key 对应一个 value。")]),s._v(" "),t("p",[s._v("string 类型是二进制安全的。意思是 redis 的 string 可以包含任何数据。比如jpg图片或者序列化的对象。")]),s._v(" "),t("p",[s._v("string 类型是 Redis 最基本的数据类型，string 类型的值最大能存储 512MB。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('redis 127.0.0.1:6379> SET name "Lee"\nOK\nredis 127.0.0.1:6379> GET name\n"Lee"\n')])])]),t("p",[s._v("在以上实例中我们使用了 Redis 的 "),t("strong",[s._v("SET")]),s._v(" 和 "),t("strong",[s._v("GET")]),s._v(" 命令。键为 name，对应的值为 "),t("strong",[s._v("Lee")]),s._v("。")]),s._v(" "),t("p",[s._v("**注意：**一个键最大能存储 512MB。")]),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"hash-哈希"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hash-哈希"}},[s._v("#")]),s._v(" Hash（哈希）")]),s._v(" "),t("p",[s._v("Redis hash 是一个键值(key=>value)对集合。")]),s._v(" "),t("p",[s._v("Redis hash 是一个 string 类型的 field 和 value 的映射表，hash 特别适合用于存储对象。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('redis 127.0.0.1:6379> HMSET person name "Lee" age 18\n"OK"\nredis 127.0.0.1:6379> HGET person Lee\n"Lee"\nredis 127.0.0.1:6379> HGET runoob age\n"18"\n')])])]),t("p",[s._v("我们使用了 Redis "),t("strong",[s._v("HMSET, HGET")]),s._v(" 命令，"),t("strong",[s._v("HMSET")]),s._v(" 设置了两个 "),t("strong",[s._v("field=>value")]),s._v(" 对, HGET 获取对应 "),t("strong",[s._v("field")]),s._v(" 对应的 "),t("strong",[s._v("value")]),s._v("。")]),s._v(" "),t("p",[s._v("每个 hash 可以存储 232 -1 键值对（40多亿）。")]),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"list-列表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#list-列表"}},[s._v("#")]),s._v(" List（列表）")]),s._v(" "),t("p",[s._v("Redis 列表是简单的字符串列表，按照插入顺序排序。")]),s._v(" "),t("p",[s._v("你可以添加一个元素到列表的头部（左边）或者尾部（右边）。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('redis 127.0.0.1:6379> lpush skills coding\n(integer) 1\nredis 127.0.0.1:6379> lpush skills wrting\n(integer) 2\nredis 127.0.0.1:6379> lpush skills running\n(integer) 3\nredis 127.0.0.1:6379> lrange skills 0 10\n1) "rabbitmq"\n2) "mongodb"\n3) "redis"\nredis 127.0.0.1:6379>\n')])])]),t("p",[s._v("列表最多可存储 232 - 1 元素 (4294967295, 每个列表可存储40多亿)。")]),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"set-集合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set-集合"}},[s._v("#")]),s._v(" Set（集合）")]),s._v(" "),t("p",[s._v("Redis 的 Set 是 "),t("strong",[s._v("string 类型的无序集合")]),s._v("。")]),s._v(" "),t("p",[s._v("集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O(1)。")]),s._v(" "),t("h3",{attrs:{id:"sadd-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sadd-命令"}},[s._v("#")]),s._v(" sadd 命令")]),s._v(" "),t("p",[s._v("添加一个 string 元素到 key 对应的 set 集合中，成功返回 1，如果元素已经在集合中返回 0。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("sadd key member\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('redis 127.0.0.1:6379> DEL runoob\nredis 127.0.0.1:6379> sadd runoob redis\n(integer) 1\nredis 127.0.0.1:6379> sadd runoob mongodb\n(integer) 1\nredis 127.0.0.1:6379> sadd runoob rabbitmq\n(integer) 1\nredis 127.0.0.1:6379> sadd runoob rabbitmq\n(integer) 0\nredis 127.0.0.1:6379> smembers runoob\n\n1) "redis"\n2) "rabbitmq"\n3) "mongodb"\n')])])]),t("p",[s._v("**注意：**以上实例中 rabbitmq 添加了两次，但根据集合内元素的唯一性，第二次插入的元素将被忽略。")]),s._v(" "),t("p",[s._v("集合中最大的成员数为 232 - 1(4294967295, 每个集合可存储40多亿个成员)。")]),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"zset-sorted-set-有序集合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zset-sorted-set-有序集合"}},[s._v("#")]),s._v(" zset(sorted set：有序集合)")]),s._v(" "),t("p",[s._v("Redis zset 和 set 一样也是string类型元素的集合,且不允许重复的成员。")]),s._v(" "),t("p",[s._v("不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。")]),s._v(" "),t("p",[s._v("zset的成员是唯一的,但分数(score)却可以重复。")]),s._v(" "),t("h3",{attrs:{id:"zadd-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zadd-命令"}},[s._v("#")]),s._v(" zadd 命令")]),s._v(" "),t("p",[s._v("添加元素到集合，元素在集合中存在则更新对应score")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("zadd key score member \n")])])]),t("h3",{attrs:{id:"实例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[s._v("#")]),s._v(" 实例")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('redis 127.0.0.1:6379> DEL runoob\nredis 127.0.0.1:6379> zadd runoob 0 redis\n(integer) 1\nredis 127.0.0.1:6379> zadd runoob 0 mongodb\n(integer) 1\nredis 127.0.0.1:6379> zadd runoob 0 rabbitmq\n(integer) 1\nredis 127.0.0.1:6379> zadd runoob 0 rabbitmq\n(integer) 0\nredis 127.0.0.1:6379> ZRANGEBYSCORE runoob 0 1000\n1) "mongodb"\n2) "rabbitmq"\n3) "redis"\n')])])]),t("h3",{attrs:{id:"各个数据类型应用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#各个数据类型应用场景"}},[s._v("#")]),s._v(" 各个数据类型应用场景：")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"left"}},[s._v("类型")]),s._v(" "),t("th",{staticStyle:{"text-align":"left"}},[s._v("简介")]),s._v(" "),t("th",{staticStyle:{"text-align":"left"}},[s._v("特性")]),s._v(" "),t("th",{staticStyle:{"text-align":"left"}},[s._v("场景")])])]),s._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("String(字符串)")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("二进制安全")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("可以包含任何数据,比如jpg图片或者序列化的对象,一个键最大能存储512M")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("---")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("Hash(字典)")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("键值对集合,即编程语言中的Map类型")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("适合存储对象,并且可以像数据库中update一个属性一样只修改某一项属性值(Memcached中需要取出整个字符串反序列化成对象修改完再序列化存回去)")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("存储、读取、修改用户属性")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("List(列表)")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("链表(双向链表)")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("增删快,提供了操作某一段元素的API")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("1,最新消息排行等功能(比如朋友圈的时间线) 2,消息队列")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("Set(集合)")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("哈希表实现,元素不重复")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("1、添加、删除,查找的复杂度都是O(1) 2、为集合提供了求交集、并集、差集等操作")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("1、共同好友 2、利用唯一性,统计访问网站的所有独立ip 3、好友推荐时,根据tag求交集,大于某个阈值就可以推荐")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("Sorted Set(有序集合)")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("将Set中的元素增加一个权重参数score,元素按score有序排列")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("数据插入集合时,已经进行天然排序")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("1、排行榜 2、带权重的消息队列")])])])]),s._v(" "),t("p",[s._v("注意：Redis支持多个数据库，并且每个数据库的数据是隔离的不能共享，并且基于单机才有，如果是集群就没有数据库的概念。")]),s._v(" "),t("p",[s._v("Redis是一个字典结构的存储服务器，而实际上一个Redis实例提供了多个用来存储数据的字典，客户端可以指定将数据存储在哪个字典中。这与我们熟知的在一个关系数据库实例中可以创建多个数据库类似，所以可以将其中的每个字典都理解成一个独立的数据库。")]),s._v(" "),t("p",[s._v("每个数据库对外都是一个从0开始的递增数字命名，Redis默认支持16个数据库（可以通过配置文件支持更多，无上限），可以通过配置databases来修改这一数字。客户端与Redis建立连接后会自动选择0号数据库，不过可以随时使用SELECT命令更换数据库，如要选择1号数据库：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("redis> SELECT 1\nOK\nredis [1] > GET foo\n(nil)\n")])])]),t("p",[s._v("然而这些以数字命名的数据库又与我们理解的数据库有所区别。首先Redis不支持自定义数据库的名字，每个数据库都以编号命名，开发者必须自己记录哪些数据库存储了哪些数据。另外Redis也不支持为每个数据库设置不同的访问密码，所以一个客户端要么可以访问全部数据库，要么连一个数据库也没有权限访问。最重要的一点是多个数据库之间并不是完全隔离的，比如FLUSHALL命令可以清空一个Redis实例中所有数据库中的数据。综上所述，这些数据库更像是一种命名空间，而不适宜存储不同应用程序的数据。比如可以使用0号数据库存储某个应用生产环境中的数据，使用1号数据库存储测试环境中的数据，但不适宜使用0号数据库存储A应用的数据而使用1号数据库B应用的数据，不同的应用应该使用不同的Redis实例存储数据。由于Redis非常轻量级，一个空Redis实例占用的内存只有1M左右，所以不用担心多个Redis实例会额外占用很多内存。")]),s._v(" "),t("h1",{attrs:{id:"nodejs中使用redis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nodejs中使用redis"}},[s._v("#")]),s._v(" Nodejs中使用Redis")]),s._v(" "),t("h2",{attrs:{id:"连接redis服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#连接redis服务"}},[s._v("#")]),s._v(" 连接redis服务")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" redis-demo\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" redis-demo\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("pnpm")]),s._v(" init\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("pnpm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" ioredis\n")])])]),t("p",[s._v("vim ndex.js")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" Redis "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ioredis"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" redis "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Redis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("host")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'127.0.0.1'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ioredis支持回调函数和promise风格的处理方式")]),s._v("\n\nredis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'lee'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("err"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" result")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("err"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("error")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("err"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nredis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("err"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" result")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("err"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("error")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("err"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\nredis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("result")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("catch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("err")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("error")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("err"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用async函数")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" redis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("err"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("error")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("err"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("p",[s._v("运行代码：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("node")]),s._v(" index.js\n")])])]),t("h2",{attrs:{id:"api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[s._v("#")]),s._v(" API")]),s._v(" "),t("p",[s._v("redis存储的都是string，如果要存储数字，")]),s._v(" "),t("p",[s._v("需要在取值后进行手动转换。")]),s._v(" "),t("p",[s._v("不知道ioredis库有没有实现自动转换数据类型的功能？？？")])])}),[],!1,null,null,null);t.default=n.exports}}]);